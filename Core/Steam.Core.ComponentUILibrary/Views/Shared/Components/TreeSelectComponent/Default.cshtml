@using ComponentUILibrary.Models
@using ComponentUILibrary
@using Steam.Core.ComponentUILibrary.Constant

@model TreeSelectModel
@{
    string VirtualFolder = ComponentUILibraryConstant.VirtualFolder;

}
@{
    var json = Model.TreeSelectDataJson();
}
@if (Model.FirstLoadLib)
{
    <link href="@Url.Content(VirtualFolder+TreeSelectConstants.PathLib)/treeselectjs.css" rel="stylesheet" />
}


<div class="tree-select tree-select-@(Model.ID)">

</div>
<input hidden id="@Model.ID" name="@Model.ID" value="@Model.SelectedValue" />
<script src="@Url.Content(VirtualFolder+TreeSelectConstants.PathLib)/treeselectjs.umd.js">

</script>
<script>
     multiVals_@(Model.ID) = [];
    //const models = [];
    try {
        let data = "@Model.SelectedValue";
            data && data.split(',').forEach(function (el) {
                multiVals_@(Model.ID).push(el);
            })
        } catch (e) {
            console.error(e)
    }
    treeselect_@(Model.ID)= {}
     items_@(Model.ID) = JSON.parse('@Html.Raw(json)');
     treeselect_@(Model.ID) = new Treeselect({
        parentHtmlContainer: document.querySelector('.tree-select-@(Model.ID)'),
        options: items_@(Model.ID),
        value: multiVals_@(Model.ID),
        searchable: @Model.Searchable,
        placeholder: "@Model.Placeholder",
        emptyText: "@Model.EmptyFound",
        disabled: @Model.Disable,
        openLevel: @Model.OpenLevel,
        isIndependentNodes: @Model.isIndependentNodes.ToString().ToLower(),
        expandSelected: true,
         showTags: true,
         grouped:  @Model.isGrouped.ToString().ToLower(),
        isSingleSelect: @Model.isSingleSelect.ToString().ToLower(),

        // text to show if you use 'showTags'
        tagsCountText: '{count} {tagsCountText}',
    });
    console.log(treeselect_@(Model.ID));
    treeselect_@(Model.ID).srcElement.addEventListener('input', (e) => {
        let treeSelectedValue;
        if (e.detail.length > 0) {
            treeSelectedValue = e.detail.join(',');
        }
        else {
            treeSelectedValue = "";
        }

        $('#@Model.ID').val(treeSelectedValue);
    })
</script>