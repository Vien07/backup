@using ComponentUILibrary.Models
@using Steam.Core.Common.SteamString;
@model KeyValueModel
@{
    //var a = Model.PageIndex;k
    var items = Model.SelectedValue.Split(Model.SeparateSympol);
}

<a onclick="@(Model.Id)_KeyValueComponent.AddMoreRow()" class="btn btn-label-success">
    <i class="bx bx-plus"></i>
</a>
<div id="divKeyValueComponent_@(Model.Id)">
    @foreach (var item in items)
    {
        if (item != String.Empty)
        {


            string id = String.Empty.ToRandomString(8);
            var tempArr = item.Split(":");
            string value = tempArr[1].ToString();
            string key = tempArr[0].ToString();
            <div class="row mt-3 KeyValueComponent-@(Model.Id)" id="@id">
                <div class="col-5">
                    <input type="text" value="@key" id="key_@id" onchange="@(Model.Id)_KeyValueComponent.SetKeyValue()" class="form-control" placeholder="key">
                </div>
                <div class="col-5">
                    <input type="text" value="@value" id="value_@id" onchange="@(Model.Id)_KeyValueComponent.SetKeyValue()" class="form-control" placeholder="value">
                </div>
                <div class="col-1">
                    <i onclick="@(Model.Id)_KeyValueComponent.DeleteRow('@id')" style="cursor:pointer" class="bx bx-x text-danger"></i>

                </div>
            </div>
        }
    }
    @*<div class="row mt-3">
            <div class="col ">
                <input type="text" id="form-repeater-2-1" class="form-control" placeholder="key">
            </div>
            <div class="col">
                <input type="text" id="form-repeater-2-2" class="form-control" placeholder="value">
            </div>
            <div class="col">
                <a class="btn btn-label-danger">
                    <i class="bx bx-x"></i>
                </a>
            </div>
        </div>*@
    @*<div class="row mt-3">
            <div class="col ">
                <input type="text" id="form-repeater-2-1" class="form-control" placeholder="key">
            </div>
            <div class="col">
                <input type="text" id="form-repeater-2-2" class="form-control" placeholder="value">
            </div>
            <div class="col">
                <a class="btn btn-label-danger">
                    <i class="bx bx-x"></i>
                </a>
            </div>
        </div>*@
</div>
<input hidden name="@Model.Id" id="@Model.Id" value="@Model.SelectedValue" />
<script>
    var @(Model.Id)_KeyValueComponent = {}
    $(function () {
        @(Model.Id)_KeyValueComponent = new KeyValueComponent_@(Model.Id)();
    })
    class KeyValueComponent_@(Model.Id) {
        constructor() {
           this.SeparateSympol = '@Model.SeparateSympol'
        }
        AddMoreRow() {
            var _this = this
        var id = Math.random().toString(16).slice(2)
        var divInputId =  id;
        var keyInputId = "key_" + id;
        var valueInputId = "value_" + id;
        var valueInputName = "value_" + id;
        var keyInputName = "value_" + id;

        $("#divKeyValueComponent_@(Model.Id)").append(
            `
                <div id="${divInputId}" class="row mt-3 KeyValueComponent-@(Model.Id)">
        <div class="col-5">
            <input type="text" id="${keyInputId}" onchange="@(Model.Id)_KeyValueComponent.SetKeyValue()" class="form-control" placeholder="key">
        </div>
        <div class="col-5">
            <input type="text" id="${valueInputId}" onchange="@(Model.Id)_KeyValueComponent.SetKeyValue()" class="form-control" placeholder="value">
        </div>
        <div class="col-1">
                        <i style="cursor:pointer" onclick='@(Model.Id)_KeyValueComponent.DeleteRow("${divInputId}")' class="bx bx-x text-danger"></i>

        </div>
    </div>
        `)
    }

        DeleteRow(id) {
            var _this = this
        $("#" + id).remove();
        _this.SetKeyValue()
    }
        SetKeyValue() {
        var _this = this
        var rs = "";
        var className = 'KeyValueComponent-@(Model.Id)';
        $("." + className).each(function () {
            var id = this.id
            console.log(this.id)
            var keyVal = $("#key_" + id).val()
            var valueVal = $("#value_" + id).val()
            if (keyVal != "" && valueVal != "") {
                var c = `${keyVal}:${valueVal}`

                rs += c + _this.SeparateSympol
            }

        });
        $("#@Model.Id").val(rs);
    }

    }
</script>