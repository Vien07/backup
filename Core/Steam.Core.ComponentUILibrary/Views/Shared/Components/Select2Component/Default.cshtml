@using ComponentUILibrary.Models
@using ComponentUILibrary
@using Steam.Core.ComponentUILibrary.Constant

@model NiceSelectModel
@{
    string VirtualFolder = ComponentUILibraryConstant.VirtualFolder;

}
@{
//var a = Model.PageIndex;
}
<style>
    .nice-select .list {
        height: 0;
    }

    .nice-select.open .list {
        height: auto;
        z-index: 9999;
    }
</style>
<link href="@Url.Content(VirtualFolder+NiceSelectConstants.PathLib)/nice-select2.css" rel="stylesheet" />
<script src="@Url.Content(VirtualFolder+NiceSelectConstants.PathLib)/nice-select2.js"></script>
<select hidden @(Model.IsRequire ? "required" : "") id="nice_select_@Model.Id" class="@Model.Class @Model.Size ">
    @if (Model.Data != null)
    {

        <option value="@Model.DefaultValue" @(Model.SelectedValue == Model.DefaultValue ? "selected" : "")>@Model.DefaultText</option>

        foreach (var item in Model.Data)
        {
            <option level="0" @(item.Value == Model.SelectedValue ? "selected" : "") value="@item.Value">@item.Name</option>
        }
    }
</select>
<input hidden id="inputSelect_@Model.Id" name="@Model.Id" value="@Model.SelectedValue" />
<script>
    $(function() {
        var options = { searchable: @Model.Search}
        NiceSelect.bind(document.getElementById("nice_select_@Model.Id"), options)
            @*$("#nice_select_@Model.Id").niceSelect();*@

    });
    $('#nice_select_@Model.Id').on('change', function () {

        $('#inputSelect_@Model.Id').val($('#nice_select_@Model.Id').val())
    });
</script>
