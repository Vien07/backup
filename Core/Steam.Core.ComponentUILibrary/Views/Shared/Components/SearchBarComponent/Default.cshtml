@using ComponentUILibrary.Models
@using ComponentUILibrary
@using Microsoft.Extensions.Configuration
@using Steam.Core.ComponentUILibrary.Constant
@using ComponentUILibrary.ViewComponents;
@model SearchBarModel
@{
    string VirtualFolder = ComponentUILibraryConstant.VirtualFolder;
}
@if (Model.FirstLoadLib)
{
    <link href="@Url.Content(VirtualFolder+NiceSelectConstants.PathLib)/nice-select2.css" rel="stylesheet" />
    <script src="@Url.Content(VirtualFolder+NiceSelectConstants.PathLib)/nice-select2.js"></script>
}
<div class="row d-flex">
    @if (Model.ShowActiveSelect)
    {

        List<SelectControlData> activeSelect = new List<SelectControlData>();
        activeSelect.Add(new SelectControlData { Name = "Active", Value = "1" });
        activeSelect.Add(new SelectControlData { Name = "InActive", Value = "0" });
        NiceSelectModel selectModel2 = new NiceSelectModel();
        selectModel2.Data = activeSelect;
        selectModel2.Id = "Active";
        selectModel2.Size = "";
        selectModel2.Class = "nice-select form-control me-1 col-6 col-md-4 col-lg-3 mb-2";

        @await Select2Component.Render(ViewContext, selectModel2);

    }

    @if (Model.ShowSearchBox)
    {
        <div class="col-12 col-md-auto col-lg-auto input-group w-auto mb-2 p-0 me-1" style="height: 38px">
            <input type="text" name="KeySearch" id="KeySearch" class="form-control form-control-sm"
                   placeholder="từ khóa tìm kiếm" aria-label="từ khóa tìm kiếm" />
            <button class="btn btn-sm btn-outline-secondary" type="button" id="buttonSearch">
                <i class="bi bi-search"></i>
            </button>
        </div>
    }
    @if (Model.CustomSelects != null)
    {
        <div class="col-auto mb-2 mb-lg-0 p-0">
            <div class="input-group">
                <a class="btn btn-primary btn-m px-3" href="#" data-bs-toggle="modal" data-bs-target="#customSelectsModal">
                    <i class="bi-sliders"></i>
                </a>
            </div>
        </div>
    }

</div>

@if (Model.CustomSelects != null)
{
    <div class="modal fade" id="customSelectsModal" tabindex="-1" aria-labelledby="customSelectsModalLabel" role="dialog" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
                <!-- Header -->
                <div class="modal-header">
                    <h3 class="modal-title" id="customSelectsLabel">More filters</h3>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <!-- End Header -->
                <!-- Body -->
                <div class="modal-body">


                    @foreach (var item in Model.CustomSelects)
                    {
                        List<SelectControlData>
                            customSelect = new List<SelectControlData>
                                ();
                        foreach (var value in item.Data)
                        {
                            foreach (var kvp in value)
                            {
                                customSelect.Add(new SelectControlData { Name = kvp.Key, Value = kvp.Value });
                            }
                        }
                        NiceSelectModel selectModel = new NiceSelectModel();
                        selectModel.Data = customSelect;
                        selectModel.Id = item.Id;
                        selectModel.Size = "";
                        selectModel.Class = "nice-select form-control me-1 col-6 col-md-4 col-lg-3";

                        @await Select2Component.Render(ViewContext, selectModel);
                    }
                </div>
                <!-- End Body -->

                <div class="card-footer border-top">
                    <div class="d-flex justify-content-end gap-3">
                        <a class="btn btn-dark" href="#" data-bs-dismiss="modal">Close</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
