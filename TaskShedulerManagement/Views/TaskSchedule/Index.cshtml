@model TaskShedulerManagement.Controllers.TaskScheduleController.PageModel
@using ComponentUILibrary.Models
@using TaskShedulerManagement.Constants
@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

@using ConfigAdmin = TaskShedulerManagement.Constants.TaskScheduleConstants.Config.Admin
@using ConfigWebsite = TaskShedulerManagement.Constants.TaskScheduleConstants.Config.Website



<!-- Content wrapper -->
<div class="content-wrapper">

    <!-- Content -->

    <div class="container-xxl flex-grow-1 container-p-y">


        <div class="row" id="table-hover-row">
            <div class="col-12">
                <div class="card">

                    <div class="card-header">

                        <form id="SearchForm" class="row col-xl-12 col-sm-12 cms-filter-row">
                            <!--filter action-->
                            @Html.AntiForgeryToken()

                            <div style="padding:0" class="form-group cms-filter mb-1 col-auto ">
                                @{
                                    List<SelectControlData> aa = new List<SelectControlData>();
                                    aa.Add(new SelectControlData { Name = "Active", Value = "1" });
                                    aa.Add(new SelectControlData { Name = "InActive", Value = "0" });
                                    NiceSelectModel selectModel2 = new NiceSelectModel();
                                    selectModel2.Data = aa;
                                    selectModel2.Id = "Active";
                                    selectModel2.Size = "small";
                                    selectModel2.Class = "nice-select";
                                }
                                @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NiceSelectComponent), new { model = selectModel2 })
                            </div>
                            <div style="padding:0" class="form-group cms-filter mb-1 col-auto ">
                                @{
                                    List<SelectControlData> a = new List<SelectControlData>();
                                    a.Add(new SelectControlData { Name = "Option 1", Value = "1" });
                                    a.Add(new SelectControlData { Name = "Option 22222222222222222", Value = "2" });
                                    NiceSelectModel selectModel = new NiceSelectModel();
                                    selectModel.Data = a;
                                    selectModel.Id = "Cate";
                                    selectModel.Size = "small";
                                    selectModel.Class = "nice-select";
                                }
                                @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NiceSelectComponent), new { model = selectModel })

                            </div>

                            <div style="padding:0" class="input-group  mb-1 cms-filter form-group  col-auto">
                                <input type="text" name="KeySearch" id="KeySearch" class="cms-font-size-075  form-control form-control-sm" placeholder="từ khóa tìm kiếm" aria-label="từ khóa tìm kiếm" />
                                <button class="btn btn-sm btn-outline-secondary btn-cms-filter" type="button" onclick="_action.Search(1)" id="buttonSearch"><i class="bx bx-search"></i></button>
                            </div>
                            <div style="padding:0" class="col-sm-2 cms-filter">
                                <a type="button" href="@TaskScheduleConstants.Route.PageEdit" class="btn btn-primary ">
                                    New
                                </a>
                            </div>
                            <!--filter action-->

                        </form>
                    </div>
                    <div class="card-content p-lg-2 pr-2 cms-div-table ">
                        <!-- table hover -->
                        <div class="table-responsive">
                            @{
                                ComponentUILibrary.Models.TableData table = new ComponentUILibrary.Models.TableData();
                                table.ID = "test2";
                                table.Class = "table table-hover bg-white mb-0 ";
                                table.Body = await Html.PartialAsync(TaskScheduleConstants.StaticPath.PartialView.Index_Table, new List<dynamic>());

                                List<TableHead> tableHead = new List<TableHead>();
                                tableHead.Add(new TableHead { Name = "#", Width = 50, Filter = "ASC", OrderBy = "Order" });
                                tableHead.Add(new TableHead { Name = "Hình ảnh", Width = 1 });
                                tableHead.Add(new TableHead { Name = "Tiêu đề", Filter = "ASC", OrderBy = "Title" });
                                tableHead.Add(new TableHead { Name = "Mô tả" });
                                tableHead.Add(new TableHead { Name = "Active", Width = 1, Class = "text-right" });
                                tableHead.Add(new TableHead { Name = "Action", Width = 1 });
                                tableHead.Add(new TableHead { Name = "", Width = 1 });
                                table.Header = tableHead;
                            }
                            @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.TableComponent), new { table = table })


                            <div class="row mx-0 mt-1 align-items-center">
                                <div class="col-12 col-sm-6">
                                    <button type="button" onclick="_action.Enable(0,true)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="active"><i class="fas fa-eye"></i></button>
                                    <button type="button" onclick="_action.Enable(0,false)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="inactive"><i class="fas fa-eye-slash"></i></button>
                                    <button type="button" onclick="_action.Delete(0)" class="btn btn-sm btn-danger " data-toggle="tooltip" data-placement="top" title="" data-original-title="delete"><i class="fas fa-trash-alt t"></i></button>
                                    <button type="button" onclick="_action.EnableUpdateOrder('edit')" class="btn btn-sm btn-outline-secondary " id="btnOrder" data-toggle="tooltip" data-placement="top" title="" data-original-title="order">
                                        <i class="fa-solid fa-arrow-down-up-across-line " style="--fa-beat-scale: 2.0;"></i>
                                    </button>

                                </div>
                                <div class=" col-12 col-sm-6  align-items-center" id="divPaging">
                                    <nav style="float:right" class="pagination-wrap d-inline-block" id="navigation_paging" aria-label="navigation">
                                        @{
                                            PaginationModel pageModel = new PaginationModel();
                                            pageModel.PageIndex = 1;
                                            pageModel.PageSize = 1;
                                            pageModel.PageCount = 10;
                                            pageModel.Id = "";
                                            pageModel.Class = "";
                                        }
                                        @*@await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.PaginationComponent), Model.Pagination)*@



                                    </nav>
                                </div>
                            </div>

                        </div>

                        <!-- table hover -->

                    </div>
                </div>
            </div>
        </div>

        @*    <div id="divModalInfo">*@
        <!-- modal -->
        @*        @await Html.PartialAsync(Model._PartialUrl+Model._PartialModel,Model.ModelSample)
        *@
        <div class="modal fade" id="ModelData" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="ModelDataLabel" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="ModelDataLabel">Thông tin Slide</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NavLangComponent))

                        <div class="tab-content" id="divModalInfo">
                        </div>
                    </div>
                    @*               <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        <button type="button" onclick="_action.Save()" class="btn btn-primary">Lưu</button>


                        </div>*@
                </div>
            </div>
        </div>
        @*    </div>
        *@
        <!-- modal -->
        <!-- Modal config -->
        <!-- end Modal config -->
        @Html.AntiForgeryToken()

    </div>
    <!-- / Content -->



    <div class="content-backdrop fade"></div>
</div>

<div id="divModalConfig">

    @await Html.PartialAsync(TaskScheduleConstants.StaticPath.PartialView.Index_ModalConfig, null)
</div>
<!-- Content wrapper -->
