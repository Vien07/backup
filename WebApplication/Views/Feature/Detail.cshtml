@using CMS.Services.TranslateServices;
@using System.Web
@using CMS.Services;
@using DTO.Feature;
@using DTO;
@using DTO.Website;
@using Microsoft.AspNetCore.Http;
@using CMS.Repository;
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor _httpContextAccessor;

@inject IHome_Repository _repHome;
@inject ITranslateServices _translate
@{
    ViewData["Title"] = "Detail";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var lang = _httpContextAccessor.HttpContext.Session.GetString(ConstantStrings.WebsiteLang);

    FeatureDto data = ViewBag.Data as FeatureDto;
    string banner = ViewBag.Banner as string;
    PopupDto popup = ViewBag.Popup;
    int? popupDelayTime = null;
    if (popup != null)
    {
        popupDelayTime = popup.DelayTime;
    }
    List<HomePageDto> homePageFeature = ViewBag.HomePageFeature as List<HomePageDto>;
    string homeImage = ViewBag.HomeImage as string;
    string homeImageMobile = ViewBag.HomeImageMobile as string;
    string featureImage = ViewBag.FeatureImage as string;
}
@section Meta{
    @Html.Raw(ViewBag.Meta)
}

@section Popup{
    @if (popup != null)
    {
        <div class="modal-body p-0" id="popupModalBody">
            @if (popup.DisplayType == "normal")
            {
                <a target="@(popup.TargetLink == "_blank" ? "_blank" : "")" href="@popup.Link"><img src="@popup.Image" title="@popup.Title" alt="@popup.Title"></a>
            }
            else
            {
                <div id="popupdiv"></div>
                <script>
                    let popupEmbedCode = convertEmbedCode('@popup.EmbedCode');
                    document.getElementById('popupdiv').innerHTML += popupEmbedCode;
                </script>
            }
        </div>
    }
}

@section Banner{
    <section class="banner-lg block-bg banner-page"
             style="background-image: url('@banner')">
        <div class="container d-flex">
            <div class="text-banner">
                <h1 class="tt-md f-secondary">@Html.Raw(_translate.GetString("menu.feature"))</h1>
                <nav arial-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item">
                            <a href="@Html.Raw(_translate.GetUrl("url.home"))" title="@Html.Raw(_translate.GetString("menu.home"))" alt="@Html.Raw(_translate.GetString("menu.home"))" target="_self">@Html.Raw(_translate.GetString("menu.home"))</a>
                        </li>
                        <li class="breadcrumb-item">
                            <a href="@Html.Raw(_translate.GetUrl("url.feature"))" title="@Html.Raw(_translate.GetString("menu.feature"))" alt="@Html.Raw(_translate.GetString("menu.feature"))" target="_self">@Html.Raw(_translate.GetString("menu.feature"))</a>
                        </li>
                    </ol>
                </nav>
            </div>
        </div>
    </section>
}

@if (homePageFeature.Any())
{
    <section class="block-bg py-5 py-xl-6 block-features">
        <div class="container">
            <div class="title-box text-center mb-5">
                <div class="tt-lg text-uppercase text-gradient">@Html.Raw(_translate.GetString("menu.feature"))</div>
            </div>
            <div class="row gy-3 align-items-center w-xxl-90 mx-auto">
                <div class="col-12 col-lg-6 col-xl-5 wow zoomOutIn pe-lg-5">
                    <div class="row row-cols-1 list-features__v1">
                        @foreach (var item in homePageFeature)
                        {
                            <div class="col">
                                <div class="d-flex">
                                    <div class="avatar">
                                        <img src="@Html.Raw(item.Images)" alt="@Html.Raw(item.TitleAlt)" />
                                    </div>
                                    <div class="info">
                                        <div class="tt-xs">@Html.Raw(item.Title)</div>
                                        <div class="desc">
                                            @Html.Raw(item.Description)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-12 col-lg-6 col-xl-7 wow zoomOutIn">
                    @if (!String.IsNullOrEmpty(featureImage))
                    {
                        <div class="thumb">
                            <img src="@Html.Raw(featureImage)" />
                        </div>
                    }
                    else
                    {
                        <div class="thumb">
                            <img src="/css/skin/theme/features.png" />
                        </div>
                    }

                </div>
            </div>
        </div>
    </section>
}

<section class="block-bg py-5 py-xl-6 content-post">


    @if (!String.IsNullOrEmpty(homeImage))
    {
        <div class="container wow zoomOutIn mb-5">
            <div class="title-box text-center mb-3">
                <div class="tt-lg text-uppercase text-gradient">
                    @Html.Raw(_translate.GetString("home.info"))
                </div>
            </div>
            <div class="desc text-center mb-45 text-desc">
                @Html.Raw(_translate.GetString("home.info-desc"))
            </div>
            @if (!String.IsNullOrEmpty(homeImageMobile))
            {
                <div class="thumb d-block d-md-none w-xxl-90 mx-auto">
                    <img src="@Html.Raw(homeImageMobile)" alt="@Html.Raw(_translate.GetString("home.info"))" title="@Html.Raw(_translate.GetString("home.info"))" />
                </div>
            }
            <div class="thumb d-md-block d-none w-xxl-90 mx-auto">
                <img src="@Html.Raw(homeImage)" alt="@Html.Raw(_translate.GetString("home.info"))" title="@Html.Raw(_translate.GetString("home.info"))" />
            </div>
        </div>
    }
    <div class="container wow zoomOutIn">
        <div class="title-box text-center mb-4">
            <div class="tt-lg text-uppercase text-gradient">
               @Html.Raw(data.Title)
            </div>
        </div>
        <div class="desc text-desc mb-45 w-lg-75 w-xxl-50 mx-auto text-center">
            @Html.Raw(data.Description)
        </div>
        <div class="content">
            @Html.Raw(data.Content)
        </div>
    </div>
</section>
<partial name="/Views/Shared/Convenience.cshtml" />
@section Scripts{
    <script>
        if ('@popupDelayTime' !== "") {
            ShowPopupBizMaC('@popupDelayTime')
        }
    </script>
}
