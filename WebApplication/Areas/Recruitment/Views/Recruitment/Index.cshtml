
@using static CMS.Services.WebsiteServices.WebsiteServices
@using static DTO.ConstantStrings
@using CMS.Services.TranslateServices;
@inject ITranslateServices _translate

@{
    ViewData["Title"] = "Index";
    Layout = "~/Areas/Shared/Views/_Layout.cshtml";
}
@section styles{
    <!-- Bootstrap Dropzone CSS -->
    <link href="/b-admin/vendors/dropzone/dist/dropzone.css" rel="stylesheet" type="text/css" />
}

<!-- Container -->
<div class="container-fluid px-lg-4">
    <!-- Title -->
    <div class="hk-pg-header pt-20">
        <h5 class="hk-pg-title text-light text-uppercase"><span class="pg-title-icon"><i class="fas fa-layer-group"></i></span>@Html.Raw("Tuyển dụng")</h5>
    </div>
    <!-- /Title -->
    <!-- Row -->
    <div class="row">
        <div id="list" class="col-xl-12">
            <section class="hk-sec-wrapper">
                @*<p class="mb-20">
                        @_translate.GetStringAdmin("table-desc.recruitment")
                    </p>*@
                <div class="form-inline align-items-center">
                    <div class="col-auto form-group px-0 mb-3">
                        <select onchange="Search()" id="selectActive" class="form-control select2 form-control-sm">
                            <option value="" selected>—@_translate.GetStringAdmin("group.select-all")</option>
                            <option value="1">@_translate.GetStringAdmin("group.select-active")</option>
                            <option value="0">@_translate.GetStringAdmin("group.select-inactive")</option>
                        </select>
                    </div>
                    @*<div class="col-auto form-group px-2 mb-3">
                        <select onchange="Search()" id="selectCate" class="form-control form-control-sm nice-select">
                        </select>
                    </div>*@
                    <div class="col-auto form-group px-2 mb-3 ">
                        <input type="search" id="key" class="form-control form-control-sm" placeholder="Keyword search" />
                        <div class="input-group-append">
                            <button onclick="Search(0)" type="button" class="btn btn-sm btn-light ml-2" data-toggle="tooltip" data-placement="top" title="@_translate.GetStringAdmin("group.tooltip-search")">
                                <i class="fal fa-search"></i>
                            </button>
                        </div>
                    </div>
                    <div class="col-auto mb-3 px-2">
                        <button onclick="OpenAddModal()" class="btn btn-sm btn-success waves-effect waves-light" data-animation="fadein" data-plugin="custommodal" data-overlaycolor="#38414a">
                            <i class="fas fa-layer-plus"></i> @_translate.GetStringAdmin("group.btn-add")
                        </button>
                    </div>
                </div>
                <div class="row">
                    <div class="col-sm">
                        <div class="table-wrap">
                            <div class="table-responsive ">
                                <table id="tableData" class="table table-hover table-sm mb-0">
                                    <thead class="thead-light">
                                        <tr>
                                            <th class="py-2" width="5">
                                                <div class="custom-control custom-checkbox">
                                                    <input onclick="CheckAll()" type="checkbox" class="custom-control-input" id="customcheck-all">
                                                    <label class="custom-control-label position-static" for="customcheck-all"></label>
                                                </div>
                                            </th>
                                            <th class="py-2">@_translate.GetStringAdmin("label.title")</th>
                                            <th class="py-2 text-center" width="120">@_translate.GetStringAdmin("label.count-view")</th>
                                            <th class="py-2 text-center" width="100">@_translate.GetStringAdmin("label.action")</th>
                                        </tr>
                                    </thead>
                                    <tbody id="tbodyData">
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="d-flex align-items-center mt-3">
                            <div class="my-1 mr-auto">
                                <button type="button" onclick="Enable(0, true)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="active"><i class="fas fa-eye"></i></button>
                                <button type="button" onclick="Enable(0, false)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="inactive"><i class="fas fa-eye-slash"></i></button>
                                <button type="button" onclick="Coppy()" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="copy clone row"><i class="fas fa-copy"></i></button>
                                <button type="button" onclick="DeleteMulti()" class="btn btn-sm btn-danger" data-toggle="tooltip" data-placement="top" title="" data-original-title="delete"><i class="fal fa-trash-alt"></i></button>
                                <button type="button" onclick="LoadData()" class="btn btn-sm btn-primary " data-toggle="tooltip" data-placement="top" title="save order" data-original-title=""><i class="fal fa-save"></i></button>
                            </div>
                            <div class="my-1 ml-auto" id="divPaging">
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        </div>
        <!-- Compose -->
        <!-- Compose -->
        <div hidden id="compose" class="col-xl-12">
            <div id="formInput">
                <section class="hk-sec-wrapper pb-0 pt-1 px-1 mb-3">
                    <div class="form-group mb-0">
                        <ul class="nav nav-tabs" id="langTab" role="tablist">
                            <li style="cursor: pointer" lang="vi" class="nav-item">
                                <a class="nav-link active show" data-toggle="tab" role="tab" aria-controls="info" aria-selected="true"><i class="flag-icon flag-icon-vn"></i> Tiếng việt</a>
                            </li>
                            <li style="cursor: pointer" lang="en" class="nav-item">
                                <a class="nav-link" data-toggle="tab" role="tab" aria-controls="img" aria-selected="false"><i class="flag-icon flag-icon-us"></i> English</a>
                            </li>
                        </ul>
                    </div>
                </section>
                <div id="bodyCompose">
                </div>
                <div class="form-group d-flex align-items-center justify-content-start my-2">
                    <div class="form-group d-flex align-items-center border-right pr-2 mb-0 mr-2">
                        <button type="button" onclick="Clear()" class="btn btn-dark mr-2"><i class="fas fa-window-close"></i> @_translate.GetStringAdmin("button.close") </button>
                        <button type="button" id="btnSave" onclick="Save()" class="btn btn-primary mr-1"><i class="fas fa-vote-yea mr-5"></i>@_translate.GetStringAdmin("button.update")</button>
                        <button hidden type="button" id="preview" onclick="Preview()" class="btn btn-cyan mr-1"><i class="far fa-eye"></i> @_translate.GetStringAdmin("button.preview") </button>
                    </div>
                    <div id="toggle_enable" value="true" class="toggle toggle-light toggle-bg-success toggle2 mr-2 raw"></div>
                </div>
            </div>
        </div>
        <!-- /Compose -->

    </div>
    <!-- /Row -->
</div>

<!-- /Container -->
<!-- Custom Modal -->
<div class="modal fade" id="imageModel" tabindex="-1" role="dialog" aria-labelledby="modal-modi" aria-hidden="true">
    <div class="modal-dialog modal-md modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Hình ảnh</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
            </div>
            <div class="modal-body">
                @*<form>*@
                <div class="d-flex">
                    <div class="mr-3">
                        <div class="avatar avatar-xl rounded">
                            <img id="modalImages" src="/b-admin/dist/img/avatar3.jpg" class="avatar-img rounded">
                        </div>
                    </div>
                    <div class="flex-grow-1">
                        <div class="form-group mb-2 pb-1">
                            <textarea id="caption" type="text" class="form-control form-control-sm" placeholder="Mo ta"></textarea>
                        </div>
                        <div class="form-group mb-2 pb-1 px-0 col-5">
                            <button id="btnDeleteImages" class="btn btn-danger">Xóa</button>
                            <button id="btnSaveImages" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                </div>
                @*</form>*@

            </div>
        </div>
    </div>
</div>
<!-- Custom Modal -->




@section Scripts{


    <!--bizmac-->
    @*<script src="/b-admin/plugin/bizmac/CustomFunctionBrowser.js"></script>
        <script src="/b-admin/plugin/bizmac/filemanager.js"></script>
        <script src="/b-admin/plugin/bizmac/getselect.js"></script>
        <script src="/b-admin/plugin/bizmac/InitInputAction.js"></script>
        <script src="/b-admin/plugin/bizmac/CommonAction.js"></script>*@
    <!---->

    <script type="text/javascript">
     //#define
        var actionUrl ="/b-admin/Recruitment/"
        var state = "add";
        var lang = "@DefaultLang";
        var listImages = [];
        var cate = [];
        var myDropzone;
        var imagesList = [];
        var multiLangImagesList = [];

        var localStorgaNameObjs = "rawRecruitmentObjs";
        var localStorgaNameMultiLang_Obj = "rawRecruitmentMultiLang_Obj";
        var localStorgaNameCate = "rawRecruitmentCates";
    //
    var imagesObj = {
            base64: '',
            type:''
        }
        var cate = [];
    var obj =
    {
        pid: 0,
        enabled: true,
        picThumb: "",
        tagKey: "",
        publishDate: "",
        expireDate: "",
        amount: 0,
    };
    var objLang = {
        Pid: 0,
        Title: '',
        Content: '',
        Description: '',
        LangKey: '',
        Location: '',
        Salary: '',
        Type: '',
        Exp: '',
        Job: '',
        Rank: '',
        WorkPlace: ''
    }
    var multiLang_obj = []


     $(function () {
         //GetSelectRecruitmentCateSearch('#selectCate', lang, cate);

        LoadData(lang);
     })

    //raw data action
     function CustomSetDataEdit(data) {
         obj = data.detail;
         multiLang_obj = data.list;
         cate = data.listCates;
         imagesList = data.images;
         multiLangImagesList = data.images_lang;
     }
     function ShowRawData() {
         if (state == "add") {

                // get raw data in localStorage
                var rawRecruitmentObjs = localStorage.getItem(localStorgaNameObjs);
                if (rawRecruitmentObjs != null && typeof rawRecruitmentObjs != "undefined" && rawRecruitmentObjs != "null") {
                    obj = JSON.parse(rawRecruitmentObjs);
                }
                var rawRecruitmentCates = localStorage.getItem(localStorgaNameCate);
                if (rawRecruitmentCates != null && typeof rawRecruitmentCates != "undefined" && rawRecruitmentCates != "null") {
                    cate = JSON.parse(rawRecruitmentCates);
                }
                var rawRecruitmentMultiLang_Obj = localStorage.getItem(localStorgaNameMultiLang_Obj);
                if (rawRecruitmentMultiLang_Obj != null && typeof rawRecruitmentMultiLang_Obj != "undefined" && rawRecruitmentMultiLang_Obj != "null") {
                    multiLang_obj = JSON.parse(rawRecruitmentMultiLang_Obj);


             }

            } else if (state == "edit") {
                $("#imgPicThumb").css("background-image", "url('" + obj.picThumb + "'");

         }
         if (imagesObj.type == "new") {
             $("#imgPicThumb").css("background-image", "url('" + imagesObj.base64 + "'");

         }
         $('#Amount').val(obj.amount);
         $('#TagKey').val(obj.tagKey);
         SetToggle('#toggle_enable', obj.enabled);
         if (multiLang_obj.length > 0) {
             objLang = multiLang_obj.filter(x => x.LangKey == lang)[0];
         }
         if (typeof objLang != "undefined") {

             $('#Title').val(objLang.Title);
             $('#WorkPlace').val(objLang.WorkPlace);
             $('#Rank').val(objLang.Rank);
             $('#Job').val(objLang.Job);
             $('#Description').val(objLang.Description);
             $('#Location').val(objLang.Location);
             $('#Salary').val(objLang.Salary);
             $('#Type').val(objLang.Type);
             $('#Exp').val(objLang.Exp);
             //LoadImages();
             //setTimeout(function () {
             //    //GetSelectRecruitmentCateMulti('#RecruitmentCatePid', cate, lang);//cate

             //    tinymce.get("Content").setContent(objLang.Content);
             //    //$('#RecruitmentCatePid').change(function () {
             //    //    SaveRawData();
             //    //});
             //}, 200);
             SetContentAsync("Content", objLang.Content);
         }
         LoadImages();
         //GetSelectRecruitmentCateMulti('#RecruitmentCatePid', cate, lang);//cate

        }
     function SaveRawData() {
             obj.tagKey = $("#TagKey").val();
             obj.publishDate = $("#PublishDate").val();
            obj.expireDate = $("#ExpireDate").val();
            obj.amount = $("#Amount").val();

            cate = $('#RecruitmentCatePid').val();

            var tempObjLang = {};
            tempObjLang.Title = $('#Title').val();
            tempObjLang.WorkPlace = $('#WorkPlace').val();
            tempObjLang.Rank = $('#Rank').val();
            tempObjLang.Job = $('#Job').val();
            tempObjLang.Description = $('#Description').val();
            tempObjLang.Location = $('#Location').val();
            tempObjLang.Salary = $('#Salary').val();
            tempObjLang.Type = $('#Type').val();
            tempObjLang.Exp = $('#Exp').val();
            tempObjLang.Content = tinymce.get("Content").getContent();
            tempObjLang.LangKey = lang;
            var tempMultiLang_obj = multiLang_obj.filter(x => x.LangKey == lang);
            if (tempMultiLang_obj.length > 0) {
                tempMultiLang_obj[0].Title = tempObjLang.Title;
                tempMultiLang_obj[0].WorkPlace = tempObjLang.WorkPlace;
                tempMultiLang_obj[0].Rank = tempObjLang.Rank;
                tempMultiLang_obj[0].Job = tempObjLang.Job;
                tempMultiLang_obj[0].Description = tempObjLang.Description;
                tempMultiLang_obj[0].Content = tempObjLang.Content;
                tempMultiLang_obj[0].Location = tempObjLang.Location;
                tempMultiLang_obj[0].Salary = tempObjLang.Salary;
                tempMultiLang_obj[0].Type = tempObjLang.Type;
                tempMultiLang_obj[0].Exp = tempObjLang.Exp;
            } else {
                multiLang_obj.push(tempObjLang);
         }
         if (state == "add") {
             localStorage.setItem(localStorgaNameObjs, JSON.stringify(obj));
             localStorage.setItem(localStorgaNameMultiLang_Obj, JSON.stringify(multiLang_obj));
             localStorage.setItem(localStorgaNameCate, JSON.stringify(cate));
            }


        }
     /////////


    //common action
        function GetFormData() {
            var formData = new FormData();

         if (imagesObj.type == "new") {
             var blob = dataURItoBlob(imagesObj.base64);
             formData.append('PicThumb', blob, 'fileName.jpeg');

         }
         formData.append("stringObj", JSON.stringify(obj));
         formData.append("stringMultiLangObj", JSON.stringify(multiLang_obj));

        formData.append("listCates", cate.toString());
        formData.append("imagesList", JSON.stringify(imagesList));
        formData.append("multiLangImagesList", JSON.stringify(multiLangImagesList));
        if (state == "edit") {
            formData.append("imagesDeleteList", JSON.stringify(imagesDeleteList));

        }
        return formData;
     }

    function Validate() {
        SaveRawData();

        return true;
    }
    //

        //
    //Initinput Action
    function InitInput() {
            myDropzone = new Dropzone("#dropzoneImages", {
                addRemoveLinks: true
            });

            tinymce.remove();

            InitTinymce('Content');

            $('.raw').keyup(function () {
                SaveRawData();
            });//event raw
            tinymce.get("Content").on('keyup', function (e) {
                SaveRawData();
            });//content
            InitDatePicker("#PublishDate", obj.publishDate);
            InitDatePicker("#ExpireDate", obj.expireDate);
            $('#PublishDate').change(function () {
                SaveRawData();

            });
            $('#ExpireDate').change(function () {
                SaveRawData();

            });
        }
    function Clear() {
        state = "add";
        listImages = [];
        cate = [];
        imagesObj = {
            base64: '',
            type: ''
        };
       obj ={
          pid: 0,
          enabled: true,
          picThumb: "",
           tagKey: "",
           publishDate: ""
      };
        objLang = {
            Pid: 0,
            Title: '',
            Content: '',
            LangKey: '',
            Location: '',
            Salary: '',
            Type: '',
            Exp: '',
            Rank: '',
            Job: '',
            WorkPlace: ''
        };
        cate = [];
        multiLang_obj = [];
         imagesList = [];
        multiLangImagesList = [];
        imagesDeleteList = [];
            if (state == 'add') {
                localStorage.setItem(localStorgaNameObjs, JSON.stringify(obj));
                localStorage.setItem(localStorgaNameMultiLang_Obj, JSON.stringify(multiLang_obj));
                localStorage.setItem(localStorgaNameCate, JSON.stringify(cate));
            }
            else if (state = "edit") {

        }
        $("#compose").attr("hidden", "true");
        $("#list").removeAttr("hidden");
    }
     //
     //grid action
    function LoadGrid(jsString,paging) {
    var data = JSON.parse(jsString)
    var html = ""
        for (let i = 0; i < data.length; i++) {
            html += ` <tr class="${!data[i].Enabled ? "inactive" : ""}" tabIndex="${i}" slot="${data[i].Order}"  id="${data[i].Pid}">
             <td>
                                  <div  class="custom-control custom-checkbox">
                                      <input  onclick="KtCheckbox()" type="checkbox" class="custom-control-input" id="customCheck-${data[i].Pid}" name="Chk" value="${data[i].Pid}">
                                      <label class="custom-control-label" for="customCheck-${data[i].Pid}">&nbsp;</label>
                                  </div>
                              </td>
                      
                      <td><a  data-toggle="tooltip" data-original-title="edit" style="cursor:pointer"  onclick="Edit(${data[i].Pid})"  class="${data[i].Enabled==false?"text-mute":"text-primary"}">${data[i].Title}</a></td>

                      <td class="text-center">${data[i].CounterView}</td>
                      <td class="text-center text-nowrap">
                        <input id="orderInput-${data[i].Pid}" onfocusout="UpdateOrder(${data[i].Pid})" type="text" tabindex="${100 + i}" class="form-control form-control-sm d-inline mr-2 text-right border" placeholder="" value="${data[i].Order}" style="width:45px;height:25px ">
                        <a style="cursor:pointer"  data-toggle="tooltip" data-original-title="move"><i class="fas fa-arrows-alt text-dark handle"></i></a>
                          <a style="cursor:pointer" onclick="Edit(${data[i].Pid})" class="mx-2" data-toggle="tooltip" data-original-title="edit"><i class="far fa-sliders-h text-dark"></i></a>
                          <a style="cursor:pointer" onclick="Delete(${data[i].Pid})" class="mx-2"  data-toggle="tooltip" data-original-title="delete"><i class="far fa-trash-alt text-danger"></i></a>

                  </tr>`   ;
    }
    $("#tbodyData").html(html)
    //console.log(paging)
    var pageHtml = Paging(paging.curentpage, paging.lastpage);
        $("#divPaging").html(pageHtml)
        ToolTip();
        InitDragDropTable();

}

     //

    </script>
}

