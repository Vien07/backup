@model Admin.EmailManagement.Controllers.EditEmailTemplateModel

@using Admin.EmailManagement.Constants;
@using ComponentUILibrary.Models
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["PageTitle"] = Model.PageTitle.ModuleName;

}
@*@await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.PageTitleComponent), new { model = Model.PageTitle })*@

<section class="section">
    <div class="row" id="">
        <div class="col-12">
            <div class="card">
                <div class="card-content p-lg-2 pr-2">
                    <form id="uploadForm" class="mt-2">
                        <div class="mt-2">
                            <input hidden id="Pid" class="pid" name="Pid" value="@Model.Detail.Pid">
                            <div class="row">
                                <div class="form-group col-md-2">
                                    <label for="Name">Email Code</label>
                                    <input type="text" class="form-control" id="EmailCode" value="@Model.Detail.EmailCode" name="EmailCode" aria-describedby="EmailCode" placeholder="nhập mã email...">
                                </div>
                                <div class="form-group col-md-5">
                                    <label for="Name">Tên Email</label>
                                    <input type="text" class="form-control" id="EmailName" value="@Model.Detail.EmailName" name="EmailName" aria-describedby="EmailName" placeholder="nhập tên email...">
                                </div>
                                <div class="form-group col-md-5">
                                    <style>
                                        .sample-nice-select {
                                            margin-left: 5px
                                        }
                                    </style>
                                    <label for="">Chọn cấu hình</label>
                                    @{
                                        if (Model.ListEmailAdmin.Any())
                                        {
                                            List<SelectControlData> listSelect = new List<SelectControlData>();
                                            foreach (var item in Model.ListEmailAdmin)
                                            {
                                                listSelect.Add(new SelectControlData { Name = item.EmailAddress, Value = item.Pid.ToString() });
                                            }
                                            NiceSelectModel selectModel2 = new NiceSelectModel();
                                            selectModel2.Data = listSelect;
                                            selectModel2.Id = "EmailAdminPid";
                                            selectModel2.Size = "large";
                                            selectModel2.Class = "nice-select sample-nice-select";

                                            if (Model.Detail.EmailAdminPid != null && Model.ListEmailAdmin.Select(s => s.Pid).ToList().Contains(Model.Detail.EmailAdminPid.Value))
                                            {
                                                selectModel2.SelectedValue = Model.Detail.EmailAdminPid.ToString();
                                            }

                                            @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NiceSelectComponent), new { model = selectModel2 })
                                        }
                                        else
                                        {
                                            <h5>Chưa có Email admin trong hệ thống!</h5>
                                        }
                                    }
                                </div>
                            </div>
                            <div class="form-group">
                                <label for="Name">Tiêu đề email</label>
                                <input type="text" class="form-control" id="Name" value="@Model.Detail.Title" name="Title" aria-describedby="Title" placeholder="nhập tiêu đề...">
                            </div>
                            <div class="form-group">
                                <label for="Content">Nội dung</label>

                                @{

                                    CodeMirrorModel codeMirrorContent = new CodeMirrorModel();
                                    codeMirrorContent.Id = "Content";
                                    codeMirrorContent.FirstLoadLib = true;
                                    codeMirrorContent.Content = Model.Detail.Content;
                                }
                                @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CodeMirrorComponent), codeMirrorContent)
                            </div>
                            <div class="row">
                                <div class="form-group">
                                    <label for="ContentHead">Header</label>

                                    @{

                                        CodeMirrorModel codeMirrorHeader = new CodeMirrorModel();
                                        codeMirrorHeader.Id = "Header";
                                        codeMirrorHeader.Content = Model.Detail.Header;
                                    }
                                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CodeMirrorComponent), codeMirrorHeader)
                                </div>
                                <div class="form-group">
                                    <label for="ContentFoot">Footer</label>

                                    @{

                                        CodeMirrorModel codeMirrorFooter = new CodeMirrorModel();
                                        codeMirrorFooter.Id = "Footer";
                                        codeMirrorFooter.Content = Model.Detail.Footer;
                                    }
                                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CodeMirrorComponent), codeMirrorFooter)
                                </div>
                                <div class="form-group">
                                    <label for="Content">Danh sách key</label>

                                    @{

                                        CodeMirrorModel codeMirrorKey = new CodeMirrorModel();
                                        codeMirrorKey.Id = "Key";
                                        codeMirrorKey.CodeMode = "javascript";
                                        codeMirrorKey.Content = Model.Detail.Key;
                                    }
                                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CodeMirrorComponent), codeMirrorKey)
                                </div>
                            </div>
             
                            <div class="modal-footer mt-2">
                                <div class="demo-inline-spacing">
                                    <button onclick="_action.Save('uploadForm')" type="button" class="btn rounded-pill btn-primary">
                                        <span class="tf-icons bx bx-save me-1"></span>Lưu
                                    </button>
                                    <a type="button" href="@EmailTemplateConstants.Route.PageIndex" class="btn rounded-pill btn-secondary">
                                        <span class="tf-icons bx bx-x me-1"></span>Đóng
                                    </a>
                                </div>

                            </div>
                        </div>
                    </form>
                    <div class="modal-footer">
                    </div>
                </div>

            </div>
        </div>
    </div>

    @Html.AntiForgeryToken()

</section>

@section Scripts{
    <script asp-append-version="true" src="@Url.Content(EmailTemplateConstants.ModuleInfo.PathCommand)/EmailTemplate/edit.js"></script>

    <script>
        const ModelView = {
            RouteIndex: "@EmailTemplateConstants.Route.PageIndex",
            DivModalDataID: "divModalInfo",
            ModalDataID: "ModelData",
            DivModalConfigID: "divModalConfig",
            ModalConfigID: "ModelConfig",
            FromUploadID: "uploadForm",
            NavPagingID: "navigation_paging"
        }
        let _action = new AdminEmailTemplate_Edit(ModelView);
        _action.CheckFunction();
        //var dragger
        function OpenSettingModal() {
            $("#myModal2").modal("show")
        }
        function CloseSettingModal() {
            $("#myModal2").modal("hide")
        }
        function ChangeFilter() {
            $("#sort-amount").html('<i  class="fas fa-sort-amount-down-alt"></i>')

        }

        $(function () {


            //var cars = $('#cars').filterMultiSelect();

            //InitDragDropTable()
        });

    </script>
}