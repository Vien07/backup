@model Admin.Sample.Controllers.SampleController.EditModel

@using Admin.Sample.Constants;
@using ComponentUILibrary.Models
@using ComponentUILibrary.ViewComponents

<div class="mt-2">

    <div class="form-group">
        <label for="title">Textbox</label>
        <input required type="text" class="form-control" id="title" value="@Model.Detail.Title" name="title" aria-describedby="title" placeholder="nhập tiêu đề...">
    </div>
    <div class="form-group">
        <label for="title">Date picker</label>
        @{
            DatePickerModel datePickerModel = new DatePickerModel();
            datePickerModel.Id = "SampleDatePicker";
            datePickerModel.ClassContainner = "col-lg-4 mb-1";
            datePickerModel.Placeholder = "Chọn ngày";
            datePickerModel.FirstLoadLIb = true;
            datePickerModel.Value = DateTime.Now.ToString("dd/M/yyyy");
        }
        @*@await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.DatePickerComponent), datePickerModel)*@
        @await DatePickerComponent.Render(ViewContext, datePickerModel)
    </div>
    <div class="form-group col-md-6">
        <label for="title">Tree-Select</label>
        @{
            TreeSelectModel treeSelectModel = new TreeSelectModel();
            treeSelectModel.ID = "TreeSelectTest";
            treeSelectModel.FirstLoadLib = true;
            treeSelectModel.Name = "col-lg-4 mb-1";
            treeSelectModel.Class = "Chọn ngày";
            treeSelectModel.SelectedValue = "React.js,child2Root1";
        }
        @await TreeSelectComponent.Render(ViewContext, treeSelectModel)
    </div>
    <div class="form-group">
        <label for="title">Từ ngày - đến ngày</label>
        @{
            FromDateToDateModel fromDateToDateModel = new FromDateToDateModel();
            fromDateToDateModel.Id = "testRangeDate";
            fromDateToDateModel.FromDate_Id = "FromDate_SampleDatePicker";
            fromDateToDateModel.ToDate_Id = "ToDate_SampleDatePicker";
            fromDateToDateModel.ClassContainner = "col-lg-4 mb-1";
            fromDateToDateModel.Placeholder = "Chọn ngày";
            fromDateToDateModel.FirstLoadLIb = true;
            fromDateToDateModel.ValidRangeDay = 1;

            fromDateToDateModel.Value = DateTime.Now.ToString("dd/M/yyyy");
        }
        @await FromDateToDateComponent.Render(ViewContext, fromDateToDateModel)
    </div>


    <div class="form-group row ml-2 col-xl-12 col-sm-12">
        <style>
            .sample-nice-select {
                margin-left: 13px
            }
        </style>
        <label for="title">Nice Select</label>

        @{
            List<SelectControlData> aa = new List<SelectControlData>();
            aa.Add(new SelectControlData { Name = "Option 1", Value = "1" });
            aa.Add(new SelectControlData { Name = "Option 2", Value = "2" });
            NiceSelectModel selectModel2 = new NiceSelectModel();
            selectModel2.Data = aa;
            selectModel2.Id = "select1";
            selectModel2.Size = "small";
            selectModel2.Class = "nice-select sample-nice-select";
            selectModel2.SelectedValue = "2";
        }
        @await NiceSelectComponent.Render(ViewContext, selectModel2)
    </div>


    <div class="form-group">
        <label for="title">Select Multiable</label>
        @{
            List<SelectControlData> multiDropdownCpn = new List<SelectControlData>();
            multiDropdownCpn.Add(new SelectControlData { Name = "option 1", Value = "1" });
            multiDropdownCpn.Add(new SelectControlData { Name = "option 2", Value = "2" });
            multiDropdownCpn.Add(new SelectControlData { Name = "option 3", Value = "3" });
            multiDropdownCpn.Add(new SelectControlData { Name = "option 4", Value = "4" });
            multiDropdownCpn.Add(new SelectControlData { Name = "option 5", Value = "5" });
            DropdownFilterMultiSelectModel multiDropdownData = new DropdownFilterMultiSelectModel();
            multiDropdownData.Data = multiDropdownCpn;
            multiDropdownData.Id = "selectmulti";
            multiDropdownData.Size = "";
            multiDropdownData.Class = "";
            multiDropdownData.FirstLoadLib = true;

            multiDropdownData.SelectedValue = "1,2,3,4";
        }
        @await DropdownFilterMultiSelectComponent.Render(ViewContext, multiDropdownData)
    </div>
    <div class="form-group">
        <label for="Description">TinyMCE Editor</label>
        @{

            EditorModel editorModel = new EditorModel();
            editorModel.Id = "Description";
            editorModel.Cols = "30";
            editorModel.Rows = "10";
            editorModel.FirstLoadLib = true;
            editorModel.Content = Model.Detail.Description;
        }
        @await EditorTinymceComponent.Render(ViewContext, editorModel)

    </div>

    <div class="form-group">
        <label for="Position" class="text-bold">RadioButton</label>

        @{
            List<RadioData> itemRadio = new List<RadioData>();
            itemRadio.Add(new RadioData { Text = "Trái", Id = "Position_left", Value = "left" });
            itemRadio.Add(new RadioData { Text = "Giữa", Id = "Position_center", Value = "center" });
            itemRadio.Add(new RadioData { Text = "Phải", Id = "Position_right", Value = "right" });
            RadioModel radioModel = new RadioModel();
            radioModel.Id = "Position";
            radioModel.Class = "row";
            radioModel.Style = "margin-left:5px";
            radioModel.Items = itemRadio;
            radioModel.SelectedValue = Model.Detail.Position;

        }
        @await RadioComponent.Render(ViewContext, radioModel)
    </div>
    <div class="form-group">

        @{
            CheckboxModel checkboxModel = new CheckboxModel();
            checkboxModel.Id = "CheckBox";
            checkboxModel.Class = "";
            checkboxModel.Style = "";
            checkboxModel.CheckValue = "1";
            checkboxModel.UnCheckValue = "0";
            checkboxModel.Value = "0";

        }
        @await CheckBoxComponent.Render(ViewContext, checkboxModel)
        <label for="Position" class="text-bold">CheckBox</label>

    </div>

</div>