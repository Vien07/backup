
@model Admin.MemberManagement.Controllers.FeedbackPageModel
@using ComponentUILibrary.Models
@using static Admin.MemberManagement.Constants.FeedbackConstants;
@using Admin.MemberManagement.Constants;

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["PageTitle"] = Model.PageTitle.ModuleName;

    //PaginationModel test = new PaginationModel();
    //test.PageIndex = 1;
    //test.PageSize = 10;

}

@*@await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.PageTitleComponent), new { model = Model.PageTitle })*@
<section class="section">
    <div class="row" id="table-hover-row">
        <div class="col-12">
            <div class="card">

                <div class="card-header">

                    <form id="SearchForm" class="row cms-filter-row">
                        <div class="d-flex flex-wrap">
                            <!--filter action-->
                            @Html.AntiForgeryToken()

                            <div style="padding:0" class="form-group cms-filter mb-1 nice-select-custom-box">
                                @{
                                    List<SelectControlData> aa = new List<SelectControlData>();
                                    aa.Add(new SelectControlData { Name = "Active", Value = "1" });
                                    aa.Add(new SelectControlData { Name = "InActive", Value = "0" });
                                    NiceSelectModel selectModel2 = new NiceSelectModel();
                                    selectModel2.Data = aa;
                                    selectModel2.Id = "Active";
                                    selectModel2.Size = "small";
                                    selectModel2.DefaultValue = "";
                                    selectModel2.Class = "nice-select";
                                }
                                @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NiceSelectComponent), new { model = selectModel2 })
                            </div>


                            <div style="padding:0" class="input-group  mb-1 cms-filter form-group">
                                <input type="text" name="KeySearch" id="KeySearch" class="cms-font-size-075  form-control form-control-sm" placeholder="từ khóa tìm kiếm" aria-label="từ khóa tìm kiếm" />
                                <button class="btn btn-sm btn-outline-secondary" type="button" onclick="_action.Search(1)" id="buttonSearch"><i class="bi bi-search"></i></button>
                            </div>
                            <div style="padding:0" class="cms-filter">
                                <a type="button" href="@Url.Content(FeedbackConstants.Config.Route.PageEdit)" class="btn btn-primary ">
                                    New
                                </a>
                            </div>
                            <!--filter action-->
                        </div>


                    </form>

                    <div class="form-group ml-auto  col-auto cms-setting">
                        <i onclick=" OpenSettingModal()" class="fas fa-cog "></i>
                    </div>
                </div>
                <div class="card-content p-lg-2 pr-2 cms-div-table ">
                    <!-- table hover -->
                    <div class="table-responsive">
                        @{
                                ComponentUILibrary.Models.TableData table = new ComponentUILibrary.Models.TableData();
                                table.ID = "test2";
                                table.Class = "table table-hover bg-white mb-0 ";
                                table.Body = await Html.PartialAsync(FeedbackConstants.StaticPath.PartialView.Index_Table, Model.List);

                                List<TableHead> tableHead = new List<TableHead>();
                                tableHead.Add(new TableHead { Name = "#", Width = 1, Filter = "ASC", OrderBy = "Order" });
                                tableHead.Add(new TableHead { Name = "Tên" });
                                tableHead.Add(new TableHead { Name = "Email" });
                                tableHead.Add(new TableHead { Name = "Rating" });
                                tableHead.Add(new TableHead { Name = "Feedback"});
                                tableHead.Add(new TableHead { Name = "SKU" });
                                tableHead.Add(new TableHead { Name = "Duyệt", Width = 1, Class = "text-right" });
                                tableHead.Add(new TableHead { Name = "Action", Width = 100, Class = "text-center" } );
                            table.Header = tableHead;
                        }
                        @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.TableComponent), new { table = table })


                        <div class="row mx-0 mt-1 align-items-center">
                            <div class="col-12 col-sm-6">
                                <button type="button" onclick="_action.Enable(0,true)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="active"><i class="fas fa-eye"></i></button>
                                <button type="button" onclick="_action.Enable(0,false)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="inactive"><i class="fas fa-eye-slash"></i></button>
                                <button type="button" onclick="_action.Delete(0)" class="btn btn-sm btn-danger " data-toggle="tooltip" data-placement="top" title="" data-original-title="delete"><i class="fas fa-trash-alt t"></i></button>
                                <button type="button" onclick="_action.EnableUpdateOrder('edit')" class="btn btn-sm btn-outline-secondary " id="btnOrder" data-toggle="tooltip" data-placement="top" title="" data-original-title="order">
                                    <i class="fa-solid fa-arrow-down-up-across-line " style="--fa-beat-scale: 2.0;"></i>
                                </button>

                            </div>
                            <div class=" col-12 col-sm-6  align-items-center" id="divPaging">
                                <nav style="float:right" class="pagination-wrap d-inline-block" id="navigation_paging" aria-label="navigation">
                                    @{
                                        PaginationModel pageModel = new PaginationModel();
                                        pageModel.PageIndex = 1;
                                        pageModel.PageSize = 1;
                                        pageModel.PageCount = Model.List.PageCount;
                                        pageModel.Id = "";
                                        pageModel.Class = "";
                                    }
                                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.PaginationComponent), Model.Pagination)



                                </nav>
                            </div>
                        </div>

                    </div>

                    <!-- table hover -->

                </div>
            </div>
        </div>
    </div>

    @*    <div id="divModalInfo">*@
    <!-- modal -->
    @*        @await Html.PartialAsync(Model._PartialUrl+Model._PartialModel,Model.ModelFeedback)
    *@
    <div class="modal fade" id="ModelData" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="ModelDataLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ModelDataLabel">Thông tin Slide</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NavLangComponent))

                    <div class="tab-content" id="divModalInfo">
                    </div>
                </div>
                @*               <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                    <button type="button" onclick="_action.Save()" class="btn btn-primary">Lưu</button>


                    </div>*@
            </div>
        </div>
    </div>
    @*    </div>
    *@
    <!-- modal -->
    <!-- Modal config -->
    <div id="divModalConfig">

        @await Html.PartialAsync(FeedbackConstants.StaticPath.PartialView.Index_ModalConfig, Model.Configs)
    </div>

    <!-- end Modal config -->
    @Html.AntiForgeryToken()

</section>
@*<button type="button" class="btn btn-secondary" data-toggle="tooltip" data-placement="top" title="Tooltip on top">
        Tooltip on top
    </button>*@
<!-- Hoverable rows end -->
@section Scripts{
    <script asp-append-version="true" src="@Url.Content(FeedbackConstants.ModuleInfo.PathCommand)/Feedback/index.js"></script>

    <script>
        const ModelView = {
            RouteIndex: "@FeedbackConstants.Config.Route.PageIndex",
            RouteIndex: "@FeedbackConstants.Config.Route.PageEdit",
            DivModalDataID: "divModalInfo",
            ModalDataID: "ModelData",
            DivModalConfigID: "divModalConfig",
            ModalConfigID: "ModelConfig",
            TableDataID: "@table.ID",
            TbodyId: "tdBody_@table.ID",
            FromUploadID: "uploadForm",
            NavPagingID: "navigation_paging",
            FileUploadID: "Images",
            SearchFormID: "SearchForm"
        }
        let _action = new AdminFeedback_Index(ModelView);
        _action.CheckFunction();
        //var dragger
        function OpenSettingModal() {
            $("#myModal2").modal({ backdrop: "static" });

            $("#myModal2").modal("show")

        }
        function CloseSettingModal() {
            $("#myModal2").modal("hide")
        }
        function ChangeFilter() {
            $("#sort-amount").html('<i  class="fas fa-sort-amount-down-alt"></i>')
        }

        $(function () {
            $('[data-toggle="tooltip"]').tooltip();


            //InitDragDropTable()
        });




    </script>
}