@using Steam.Core.Base.Constant

@model Admin.Authorization.Controllers.GroupRoleEditPageModel
@{
    ViewData["PageTitle"] = Model.PageTitle.ModuleName;

}
@*@await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.PageTitleComponent), new { model = Model.PageTitle })*@

<section class="section">

    <div class="row" id="">
        <div class="col-12">
            <div class="card">
                @*
                    <div class="card-header">
                    </div>*@
                <div class="card-content p-lg-2 pr-2">
                    <form id="uploadForm" class="mt-2">

                        <div class="mt-2">
                            <input hidden id="Pid" class="pid" name="Pid" value="@Model.GroupRoleModel.Detail.Pid">
                            <div class="form-group">
                                <label for="name">Tên nhóm quyền</label>
                                <input required type="text" class="form-control" id="name" value="@Model.GroupRoleModel.Detail.Name" name="name" aria-describedby="name" placeholder="nhập tên quyền...">
                            </div>

                            @*</div>*@

                        </div>
                        <div>
                            <button type="button" onclick="_action.SetCheckedAll()" class="btn btn-primary">Chọn tất cả</button>
                        </div>

                        <section class="section-GroupRole">

                            <div id="accordion-2" role="tablist" aria-multiselectable="true" class="o-accordion">
                                @foreach (var item in Model.List.Where(s => s.IdParent == null))
                                {
                                    <div>
                                        <p>
                                            <h5 class="mb-0">
                                                <a data-bs-toggle="collapse" href="#collapse-@item.Pid" role="button" aria-expanded="false" aria-controls="collapse-@item.Pid">
                                                    @item.Name
                                                </a>
                                            </h5>
                                        </p>
                                        <div class="collapse show" id="collapse-@item.Pid">
                                            <div class="card card-body">
                                                <div class="form-check">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" class="form-check-input form-check-success form-check-glow" name="customCheck" id="customColorCheck3" value="@item.Pid" @(Model.ListPermission.Contains(item.Pid) ? "checked" : "")>
                                                        <label class="form-check-label" for="customColorCheck3">Chọn</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    @*<div class="card">
                                        <div class="card-header" role="tab" id="heading-@item.Pid">
                                            <h5 class="mb-0">
                                                <a data-toggle="collapse" data-parent="#accordion" href="#collapse-@item.Pid" aria-expanded="true" aria-controls="collapse-@item.Pid">
                                                    @item?.Name
                                                </a>
                                            </h5>
                                        </div>

                                        <div id="collapse-@item.Pid" class="collapse show" role="tabpanel" aria-labelledby="heading">
                                            <div class="card-block">
                                                <div class="form-check">
                                                    <div class="custom-control custom-checkbox">
                                                        <input type="checkbox" class="form-check-input form-check-success form-check-glow" name="customCheck" id="customColorCheck3" value="@item.Pid" @(Model.ListPermission.Contains(item.Pid) ? "checked" : "")>
                                                        <label class="form-check-label" for="customColorCheck3">Chọn</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>*@
                                    @*@if (Model.List.Any(s => s.IdParent == item?.Pid))
                                    {
                                        foreach (var childitem in Model.List.Where(s => s.IdParent == item?.Pid))
                                        {
                                            <div class="form-check">
                                                <div class="custom-control custom-checkbox">
                                                    <input type="checkbox" class="form-check-input form-check-success form-check-glow" name="customCheck" id="customColorCheck3" value="@childitem?.Pid" @(Model.ListPermission.Contains(childitem.Pid) ? "checked" : "")>
                                                    <label class="form-check-label" for="customColorCheck3">@childitem.Name</label>
                                                </div>
                                            </div>
                                        }
                                    }
                                    else
                                    {
                                        <h7>Doesn't have any child role</h7>
                                    }*@
                                }
                            </div>
                        </section>
                    </form>
                    <div class="modal-footer mt-2">
                        <div class="demo-inline-spacing">
                            <button  onclick="_action.Save('uploadForm')" type="button" class="btn rounded-pill btn-primary">
                                <span class="tf-icons bx bx-save me-1"></span>Lưu
                            </button>
                            <a type="button" href="@Admin.Authorization.Constants.Config.Route.GroupRolePageIndex" class="btn rounded-pill btn-secondary">
                                <span class="tf-icons bx bx-x me-1"></span>Đóng
                            </a>
                        </div>
 
                    </div>
                </div>
            </div>
        </div>
    </div>

    @Html.AntiForgeryToken()

</section>

@section Scripts{
    <script asp-append-version="true" src="@(Admin.Authorization.Constants.ModuleInfo.PathCommand)/GroupRole/edit.js"></script>

    <script>
        const ModelView = {
            RouteIndex: "@Admin.Authorization.Constants.Config.Route.GroupRolePageIndex",
            DivModalDataID: "divModalInfo",
            ModalDataID: "ModelData",
            DivModalConfigID: "divModalConfig",
            ModalConfigID: "ModelConfig",
            FromUploadID: "uploadForm",
            NavPagingID: "navigation_paging",
            FileUploadID: "Images"
        }
        let _action = new AdminGroupRole_Edit(ModelView);
        _action.CheckFunction();
        //var dragger
        function OpenSettingModal() {
            $("#myModal2").modal("show")
        }
        function CloseSettingModal() {
            $("#myModal2").modal("hide")
        }
        function ChangeFilter() {
            $("#sort-amount").html('<i  class="fas fa-sort-amount-down-alt"></i>')

        }

        $(function () {


            //var cars = $('#cars').filterMultiSelect();

            //InitDragDropTable()
        });

    </script>
}