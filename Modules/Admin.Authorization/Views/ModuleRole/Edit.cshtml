@using ComponentUILibrary.Models
@using Steam.Core.Base.Constant

@model Admin.Authorization.Controllers.ModuleRoleEditPageModel
@{
    ComponentUILibrary.Models.TableData table = new ComponentUILibrary.Models.TableData();
    ViewData["PageTitle"] = Model.PageTitle.ModuleName;

}
@*@await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.PageTitleComponent), new { model = Model.PageTitle })*@

<section class="section">
    <div class="row" id="">
        <div class="col-12">
            <div class="card">
                @*
                    <div class="card-header">
                    </div>*@
                <div class="card-content p-lg-2 pr-2">
                    <form id="uploadForm" class="mt-2">

                        <div class="mt-2">
                            <input hidden id="Pid" class="pid" name="Pid" value="@Model.ModuleRoleModel.Detail.Pid">
                            <div class="form-group">
                                <label for="name">Tên quyền</label>
                                <input required type="text" class="form-control" id="name" value="@Model.ModuleRoleModel.Detail.Name" name="name" aria-describedby="name" placeholder="nhập tên quyền...">
                            </div>
                            <div class="form-group">
                                <label for="rolepath">Đường dẫn</label>
                                <input type="text" class="form-control" id="rolepath" value="@Model.ModuleRoleModel.Detail.RolePath" name="rolepath" aria-describedby="rolepath" placeholder="nhập đường dẫn path...">
                            </div>
                            <div class="form-group">
                                <label for="apikey">Api Key</label>
                                <input type="text" class="form-control" id="apikey" value="@Model.ModuleRoleModel.Detail.ApiKey" name="apikey" aria-describedby="apikey" placeholder="nhập đường dẫn Api Key nếu có...">
                            </div>
                            @*<div class="form-group">*@
                            <div class="form-check form-switch" style="margin-left: -27px !important;">
                                @{
                                    CheckboxModel checkboxModel = new CheckboxModel();
                                    checkboxModel.Id = "CheckBoxAllowAnonymous";
                                    checkboxModel.Class = "form-check-input";
                                    checkboxModel.Style = "";
                                    checkboxModel.CheckValue = "1";
                                    checkboxModel.UnCheckValue = "0";
                                    checkboxModel.Value = @Model.ModuleRoleModel.Detail.AllowAnonymous == true ? "1" : "0";

                                }
                                @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CheckBoxComponent), checkboxModel)

                                @*<input class="form-check-input" type="checkbox" id="CheckBox2" @(Model.AuthorizationModel.Detail.AllowAnonymous == true ? "checked" : "")>*@
                                <label class="form-check-label" for="AllowAnonymous">AllowAnonymous</label>
                            </div>
                            <div class="form-group">
                                <label for="name">Action Name</label>
                                <input required type="text" class="form-control" id="ActionName" value="@Model.ModuleRoleModel.Detail.ActionName" name="ActionName" aria-describedby="ActionName" placeholder="Action Name...">
                            </div>
                            <div class="form-check form-switch" style="margin-left: -27px !important;">
                                @{
                                    CheckboxModel checkboxLog = new CheckboxModel();
                                    checkboxLog.Id = "Log";
                                    checkboxLog.Class = "form-check-input";
                                    checkboxLog.Style = "";
                                    checkboxLog.CheckValue = "1";
                                    checkboxLog.UnCheckValue = "0";
                                    checkboxLog.Value = @Model.ModuleRoleModel.Detail.Log == true ? "1" : "0";

                                }
                                @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CheckBoxComponent), checkboxLog)

                                @*<input class="form-check-input" type="checkbox" id="CheckBox2" @(Model.AuthorizationModel.Detail.AllowAnonymous == true ? "checked" : "")>*@
                                <label class="form-check-label" for="Log">Log</label>
                            </div>

                            @*</div>*@

                        </div>
                    </form>
                    @if (@Model.ModuleRoleModel.Detail.Pid != 0)
                    {
                        <div style="padding:0" class="col-sm-2 cms-filter">
                            <button onclick="_action.EditPermission(0)" class="btn btn-primary ">
                                Thêm quyền
                            </button>
                        </div>
                    }

                <div class="modal-footer mt-2">
                    <div class="demo-inline-spacing">
                        <button onclick="_action.Save('uploadForm')" type="button" class="btn rounded-pill btn-primary">
                            <span class="tf-icons bx bx-save me-1"></span>Lưu
                        </button>
                        <a type="button" href="@Url.Content(Admin.Authorization.Constants.Config.Route.ModuleRolePageIndex)" class="btn rounded-pill btn-secondary">
                            <span class="tf-icons bx bx-x me-1"></span>Đóng
                        </a>
                    </div>
                </div>
                </div>
            </div>

            @if (@Model.ModuleRoleModel.Detail.Pid != 0)
            {
                <div class="card-content p-lg-2 pr-2 cms-div-table ">
                    <!-- table hover -->
                    <div class="table-responsive">
                        @{
                            table.ID = "tablePermission";
                            table.Class = "table table-hover bg-white mb-0 ";
                            table.Body = await Html.PartialAsync(Admin.Authorization.Constants.StaticPath.PartialView._PartialUrlModuleRole + Admin.Authorization.Constants.StaticPath.PartialView._PartialTableModuleRoleChild, Model.List);

                            List<TableHead> tableHead = new List<TableHead>();
                            tableHead.Add(new TableHead { Name = "#", Width = 50 });
                            tableHead.Add(new TableHead { Name = "Tên quyền" });
                            tableHead.Add(new TableHead { Name = "Đường dẫn" });
                            tableHead.Add(new TableHead { Name = "Api key" });
                            tableHead.Add(new TableHead { Name = "AllowAnonymous" });
                            tableHead.Add(new TableHead { Name = "ActionName" });
                            tableHead.Add(new TableHead { Name = "Log" });
                            tableHead.Add(new TableHead { Name = "Active", Width = 1, Class = "text-right" });
                            tableHead.Add(new TableHead { Name = "Action", Width = 1 });
                            table.Header = tableHead;
                        }
                        @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.TableComponent), new { table = table })


                        <div class="row mx-0 mt-1 align-items-center">
                            <div class="col-12 col-sm-6">

                                <button type="button" onclick="_action.Enable(0,true)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="active"><i class="fas fa-eye"></i></button>
                                <button type="button" onclick="_action.Enable(0,false)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="inactive"><i class="fas fa-eye-slash"></i></button>
                                <button type="button" onclick="_action.Delete(0)" class="btn btn-sm btn-danger " data-toggle="tooltip" data-placement="top" title="" data-original-title="delete"><i class="fas fa-trash-alt t"></i></button>


                            </div>

                        </div>

                    </div>

                    <!-- table hover -->

                </div>
            }
        </div>
    </div>

    @Html.AntiForgeryToken()

    <!-- modal -->
    <!-- Modal ModuleRoleChild -->
    <div id="divModalPermission">

        @await Html.PartialAsync(Admin.Authorization.Constants.StaticPath.PartialView._PartialUrlModuleRole + Admin.Authorization.Constants.StaticPath.PartialView._PartialModelModuleRole, Model.PermissionModel)
    </div>

</section>

@section Scripts{
    <script asp-append-version="true" src="@(Admin.Authorization.Constants.ModuleInfo.PathCommand)/ModuleRole/edit.js"></script>


    <script>
        const EditModelView = {
            RouteIndex: "@Admin.Authorization.Constants.Config.Route.ModuleRolePageIndex",
            DivModalDataID: "divModalInfo",
            ModalDataID: "ModelData",
            DivModalConfigID: "divModalConfig",
            ModalConfigID: "ModelConfig",
            FromUploadID: "uploadForm",
            NavPagingID: "navigation_paging",
            FileUploadID: "Images",
            ModalPermissionID: "modalPermission",
            DivModalPermissionID: "divModalPermission",
            TbodyPermissionId: "tdBody_@table.ID",

        }
        let _action = new AdminModuleRole_Edit(EditModelView);
        _action.CheckFunction();
        //var dragger
        function OpenSettingModal() {
            $("#modalPermission").modal("show")
        }
        function CloseSettingModal() {
            $("#modalPermission").modal("hide")
        }
        $('#modalPermission').on('hidden.bs.modal', function () {
            $('#Admin_Authorization_ModuleRole')[0].reset();

        });
        function ChangeFilter() {
            $("#sort-amount").html('<i  class="fas fa-sort-amount-down-alt"></i>')

        }

        $(function () {


            //var cars = $('#cars').filterMultiSelect();

            //InitDragDropTable()
        });

    </script>
}