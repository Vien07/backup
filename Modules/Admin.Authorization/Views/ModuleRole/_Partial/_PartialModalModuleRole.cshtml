@using ComponentUILibrary.Models
@model Admin.Authorization.Database.ModuleRole
<div class="modal left fade" id="modalPermission" tabindex="-1" role="dialog" aria-labelledby="myModal2Label2">
    <div class="modal-dialog" role="document">
        <div class="modal-content">

            <div class="modal-header ">
                <button onclick="CloseSettingModal()" type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>

                <h4 class="modal-title justify-content-center " id="myModalLabel2">@(Model.IdParent == null ? "Thêm quyền" : "Cập nhật quyền")</h4>
            </div>

            <div class="modal-body">
                <div class="tab-content" id="myTabContent">
                    <form id="Admin_Authorization_ModuleRole" class="form form-vertical mt-3">
                        <div class="form-body">
                            <div class="mt-2">
                                <input hidden id="@nameof(Model.Pid)" name="@nameof(Model.Pid)" value="@(Model.Pid)">
                                <input hidden id="@nameof(Model.IdParent)" name="@nameof(Model.IdParent)" value="@(Model.IdParent)">
                                <div class="form-group">
                                    <label for="name">Tên quyền</label>
                                    <input required type="text" class="form-control" id="name" value="@Model.Name" name="name" aria-describedby="name" placeholder="nhập tên quyền...">
                                </div>

                                <div class="form-group">
                                    <label for="rolepath">Đường dẫn</label>
                                    <input type="text" class="form-control" id="rolepath" value="@Model.RolePath" name="rolepath" aria-describedby="rolepath" placeholder="nhập đường dẫn path...">
                                </div>
                                <div class="form-group">
                                    <label for="apikey">Api Key</label>
                                    <input type="text" class="form-control" id="apikey" value="@Model.RolePath" name="apikey" aria-describedby="apikey" placeholder="nhập đường dẫn Api Key nếu có...">
                                </div>
                                @*<div class="form-group">*@
                                <div class="form-check form-switch" style="margin-left: -27px !important;">
                                    @{
                                        CheckboxModel checkboxModel = new CheckboxModel();
                                        checkboxModel.Id = "CheckBoxAllowAnonymousChild";
                                        checkboxModel.Class = "form-check-input";
                                        checkboxModel.Style = "";
                                        checkboxModel.CheckValue = "1";
                                        checkboxModel.UnCheckValue = "0";
                                        checkboxModel.Value = @Model.AllowAnonymous == true ? "1" : "0";

                                    }
                                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CheckBoxComponent), checkboxModel)

                                    <label class="form-check-label" for="AllowAnonymous">AllowAnonymous</label>
                                </div>
                                <div class="form-group">
                                    <label for="apikey">Action Name</label>
                                    <input type="text" class="form-control" id="ActionName" value="@Model.ActionName" name="ActionName" aria-describedby="ActionName" placeholder="Action Name">
                                </div>
                                <div class="form-check form-switch" style="margin-left: -27px !important;">
                                    @{
                                        CheckboxModel checkboxLog = new CheckboxModel();
                                        checkboxLog.Id = "LogChild";
                                        checkboxLog.Class = "form-check-input";
                                        checkboxLog.Style = "";
                                        checkboxLog.CheckValue = "1";
                                        checkboxLog.UnCheckValue = "0";
                                        checkboxLog.Value = @Model.Log == true ? "1" : "0";

                                    }
                                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.CheckBoxComponent), checkboxLog)

                                    <label class="form-check-label" for="Log">Log</label>
                                </div>
                                <div class="col-12 d-flex justify-content-end">
                                    <button type="button" onclick="_action.SavePermission('Admin_Authorization_ModuleRole')" class="btn btn-primary me-1 mb-1">
                                        @(Model.IdParent == null ? "Add" : "Update")
                                    </button>
                                </div>
                                @*</div>*@

                            </div>
                        </div>
                    </form>

                </div>
            </div>

        </div><!-- modal-content -->
    </div><!-- modal-dialog -->
</div>