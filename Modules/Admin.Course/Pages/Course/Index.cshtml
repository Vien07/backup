@page
@model Admin.Course.CMS.Pages.CourseModel
@using ComponentUILibrary.Models

@{

}
<section class="section">
    <div class="row" id="table-hover-row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">

                    <div class="row col-xl-12 col-sm-12">
                        <!--filter action-->
                        <div style="padding:0" class="form-group cms-filter mb-1 col-auto ">
                            @{
                                List<SelectControlData> selected = new List<SelectControlData>();
                                selected.Add(new SelectControlData { Name = "-All", Value = "" });
                                selected.Add(new SelectControlData { Name = "Active", Value = "1" });
                                selected.Add(new SelectControlData { Name = "Inactive", Value = "0" });
                                NiceSelectModel selectModel2 = new NiceSelectModel();
                                selectModel2.Data = selected;
                                selectModel2.Id = "SelectEnabled";
                                selectModel2.Size = "small";
                                selectModel2.Class = "nice-select";
                                selectModel2.Event = "_action.Search(1)";
                            }
                            @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NiceSelectComponent),new {model=selectModel2})
                        </div>

                        <div style="padding:0" class="input-group  mb-1 cms-filter form-group  col-auto">
                            <input type="text" id="Search" value="" class="cms-font-size-075 form-control form-control-sm" placeholder="Nhập từ khóa tìm kiếm" />
                            <button onclick="_action.Search(1)" class="btn btn-sm btn-outline-secondary" type="button" id="button-addon2"><i class="bi bi-search"></i></button>
                        </div>
                        <div style="padding:0" class="col-sm-2 cms-filter">
                            <a type="button" href="/Course/Edit" class="btn btn-primary btn-sm">
                                New
                            </a>
                        </div>
                        <!--filter action-->

                    </div>

                    <div class="form-group ml-auto  col-auto cms-setting">
                        <i onclick="_action.OpenSettingModal()" class="fas fa-cog "></i>
                    </div>
                </div>
                <div class="card-content p-lg-2 pr-2">
                    <!-- table hover -->
                    <div class="table-responsive">

                        @{
                            ComponentUILibrary.Models.TableData table = new ComponentUILibrary.Models.TableData();
                            table.ID = "test2";
                            table.Class = "table table-hover bg-white mb-0 ";
                            table.Body = await Html.PartialAsync(Model._PartialUrl + Model._PartialTable, Model.List);

                            List<TableHead> tableHead = new List<TableHead>();
                            tableHead.Add(new TableHead { Name = "#", Width = 50, Filter = "ASC", OrderBy = "Order" });
                            tableHead.Add(new TableHead { Name = "Hình ảnh", Width = 1 });
                            tableHead.Add(new TableHead { Name = "Tiêu đề", Filter = "ASC", OrderBy = "Title" });
                            tableHead.Add(new TableHead { Name = "Mô tả" });
                            tableHead.Add(new TableHead { Name = "Active", Width = 1, Class = "text-right" });
                            tableHead.Add(new TableHead { Name = "Action", Width = 100 });
                            table.Header = tableHead;
                        }
                        @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.TableComponent),new {table=table})


                        <div class="row mx-0 mt-1 align-items-center">
                            <div class="col-12 col-sm-6">
                                <button type="button" onclick="_action.Enable(0,true)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="active"><i class="fas fa-eye"></i></button>
                                <button type="button" onclick="_action.Enable(0,false)" class="btn btn-sm btn-outline-secondary" data-toggle="tooltip" data-placement="top" title="" data-original-title="inactive"><i class="fas fa-eye-slash"></i></button>
                                <button type="button" onclick="_action.Delete(0)" class="btn btn-sm btn-danger " data-toggle="tooltip" data-placement="top" title="" data-original-title="delete"><i class="fas fa-trash-alt t"></i></button>
                                <button type="button" onclick="_action.EnableUpdateOrder('edit')" class="btn btn-sm btn-outline-secondary " id="btnOrder" data-toggle="tooltip" data-placement="top" title="" data-original-title="order">
                                    <i class="fa-solid fa-arrow-down-up-across-line " style="--fa-beat-scale: 2.0;"></i>
                                </button>

                            </div>
                            <div class=" col-12 col-sm-6  align-items-center" id="divPaging">
                                <nav style="float:right" class="pagination-wrap d-inline-block" id="navigation_paging" aria-label="navigation">
                                    @{
                                        PaginationModel pageModel = new PaginationModel();
                                        pageModel.PageIndex = 1;
                                        pageModel.PageSize = 1;
                                        pageModel.PageCount = Model.List.PageCount;
                                        pageModel.Id = "";
                                        pageModel.Class = "";
                                    }
                                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.PaginationComponent),Model._PageModel)
                                </nav>
                            </div>
                        </div>

                    </div>

                    <!-- table hover -->

                </div>
            </div>
        </div>
    </div>

    @*    <div id="divModalInfo">*@
    <!-- modal -->
    @*        @await Html.PartialAsync(Model._PartialUrl+Model._PartialModel,Model.ModelSlider)
    *@
    <div class="modal fade" id="ModelData" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="ModelDataLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="ModelDataLabel">Thông tin Slide</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    @await Component.InvokeAsync(nameof(ComponentUILibrary.ViewComponents.NavLangComponent))

                    <div class="tab-content" id="divModalInfo">
                    </div>
                </div>
                @*               <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                <button type="button" onclick="_action.Save()" class="btn btn-primary">Lưu</button>
                </div>*@
            </div>
        </div>
    </div>
    @*    </div>
    *@
    <!-- modal -->
    <!-- Modal config -->
    <div id="divModalConfig">
        @await Html.PartialAsync(Model._PartialUrl+Model._PartialModalConfig)
    </div>

    <!-- end Modal config -->
    @Html.AntiForgeryToken()

</section>

@section Scripts{
    <script>
        const ModelView = {
            TableDataID: "@table.ID",
            TbodyId: "tdBody_@table.ID",
            DivModalDataID: "divModalInfo",
            ModalDataID: "ModelData",
            DivModalConfigID: "divModalConfig",
            ModalConfigID: "ModelConfig",
            FromUploadID: "uploadForm",
            NavPagingID: "navigation_paging",
            EnabledID: "@selectModel2.Id",
            FileUploadID: "Images",
            SearchID: "Search",
            SettingModalID: "SettingModal",
        }
        let _action = new AdminCourse(ModelView);
        _action.CheckFunction();

        $(function () {
            //var cars = $('#cars').filterMultiSelect();
            //InitDragDropTable()
        });
    </script>
}